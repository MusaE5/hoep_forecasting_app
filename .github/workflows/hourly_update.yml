name: Hourly HOEP Update
on:
  schedule:
    - cron: "40 * * * *"   # Run at 40 minutes past every hour
  workflow_dispatch: {}     # Allow manual run from GitHub Actions tab

jobs:
  run-hourly:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to push updated CSVs
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'  # built-in cache for pip dependencies
          
      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Cache installed Python packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Set timezone to Toronto before running the script
      - name: Run live prediction script
        env:
          TZ: America/Toronto
        run: python live_prediction.py
        
      - name: Commit and push updated CSVs to data branch
        env:
          TZ: America/Toronto
        run: |
          # Create or switch to data branch
          git checkout -b data-updates 2>/dev/null || git checkout data-updates
          
          # Merge any new data from main branch
          git merge main --no-edit || echo "No merge needed"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add and commit data files
          git add data/*.csv
          git commit -m "Data update: $(date +"%Y-%m-%d %H:%M:%S %Z")" || echo "No changes to commit"
          
          # Push to data branch
          git push origin data-updates
